pols <- list("sp.polygons", CookEastBoundary, fill = "lightgray")
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
library(dismo)
install.packages("dismo")
library(dismo)
v <- voronoi(dsp)
install.packages("deldir")
v <- voronoi(dsp)
plot(v)
cookeast <- aggregate(CookEastBoundary)
vcookeast <- intersect(v, cookeast)
install.packages("rgeos")
vcookeast <- intersect(v, cookeast)
spplot(vcookeast, 'GrainWeightWet', col.regions=rev(get_col_regions()))
spplot(vcookeast, 'GrainWeightWet')
cookeast <- aggregate(CookEastBoundary)
vcookeast <- intersect(v, cookeast)
spplot(vcookeast, 'GrainWeightWet')
r <- raster(CookEastBoundary, res=10000)
vr <- rasterize(vcookeast, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=10000)
plot(r)
r <- raster(cookeast, res=10000)
plot(r)
cookeast <- aggregate(CookEastBoundary)
plot(cookeast)
vcookeast <- intersect(v, cookeast)
plot(vcookeast)
vcookeast <- outersect(v, cookeast)
library(sp)
library(rgdal)
library(dismo)
d <- read.csv("Input/HY2013GP_GrainWeightOnly_171012.csv")
# --- from: https://www.nceas.ucsb.edu/scicomp/usecases/ReadWriteESRIShapeFiles ---
# optionally report shapefile details
ogrInfo("Input/Polylines", "CookEastBoundary")
# read in shapefiles
CookEastBoundary <- readOGR("Input/Polylines", "CookEastBoundary")
# note that readOGR will read the .prj file if it exists
print(proj4string(CookEastBoundary))
# generate map
plot(CookEastBoundary, axes=TRUE, border="gray")
dsp <- SpatialPoints(d[,6:5], proj4string=CRS(proj4string(CookEastBoundary)))
dsp <- SpatialPointsDataFrame(dsp, d)
cuts <- c(0,200,400,600,800,100,1200,1400)
blues <- colorRampPalette(c('yellow', 'orange', 'blue', 'dark blue'))
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
v <- voronoi(dsp)
plot(v)
library(gstat)
gs <- gstat(formula = GrainWeightWet~1, locations=dsp)
r <- raster(CookEastBoundary, res=10000)
idw <- interpolate(r, gs)
vr <- rasterize(vcookeast, r, 'GrainWeightWet')
plot(vr)
v <- voronoi(dsp)
plot(v)
cookeast <- aggregate(CookEastBoundary)
vcookeast <- intersect(v, cookeast)
spplot(vcookeast, 'GrainWeightWet', col.regions=rev(get_col_regions()))
d <- read.csv("Input/HY2013GP_GrainWeightOnly_171012.csv")
# clean nulls
d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
View(d)
# clean nulls
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
View(d)
# optionally report shapefile details
ogrInfo("Input/Polylines", "CookEastBoundary")
# read in shapefiles
CookEastBoundary <- readOGR("Input/Polylines", "CookEastBoundary")
# note that readOGR will read the .prj file if it exists
print(proj4string(CookEastBoundary))
# generate map
plot(CookEastBoundary, axes=TRUE, border="gray")
dsp <- SpatialPoints(d[,6:5], proj4string=CRS(proj4string(CookEastBoundary)))
dsp <- SpatialPointsDataFrame(dsp, d)
cuts <- c(0,200,400,600,800,100,1200,1400)
blues <- colorRampPalette(c('yellow', 'orange', 'blue', 'dark blue'))
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
r <- raster(CookEastBoundary, res=10000)
vr <- rasterize(dsp, r, 'GrainWeightWet')
plot(vr)
plot(r)
r <- raster(CookEastBoundary, res=10000)
gs <- gstat(formula = GrainWeightWet~1, locations=dsp)
idw <- interpolate(r, gs)
library(sp)
library(rgdal)
library(dismo)
library(gstat)
d <- read.csv("Input/HY2013GP_GrainWeightOnly_171012.csv")
# clean nulls
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
# --- from: https://www.nceas.ucsb.edu/scicomp/usecases/ReadWriteESRIShapeFiles ---
# optionally report shapefile details
ogrInfo("Input/Polylines", "CookEastBoundary")
# read in shapefiles
CookEastBoundary <- readOGR("Input/Polylines", "CookEastBoundary")
# note that readOGR will read the .prj file if it exists
print(proj4string(CookEastBoundary))
# generate map
plot(CookEastBoundary, axes=TRUE, border="gray")
dsp <- SpatialPoints(d[,6:5], proj4string=CRS(proj4string(CookEastBoundary)))
dsp <- SpatialPointsDataFrame(dsp, d)
cuts <- c(0,200,400,600,800,100,1200,1400)
blues <- colorRampPalette(c('yellow', 'orange', 'blue', 'dark blue'))
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
gs <- gstat(formula = prec~1, locations=dsp)
idw <- interpolate(r, gs)
idw <- interpolate(r, gs)
gs <- gstat(formula = GrainWeightWet~1, locations=dsp)
idw <- interpolate(r, gs)
gs <- gstat(formula = GrainWeightWet~1, locations=dsp)
proj4string(gs) = proj4string(CookEastBoundary)
idw <- interpolate(r, gs)
gs <- gstat(formula = GrainWeightWet~1, locations=dsp)
proj4string(dsp) = proj4string(CookEastBoundary)
idw <- interpolate(r, gs)
TA <- CRS("+proj=utm +zome=11 +datum=WGS84")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
TA <- CRS("+proj=utm +zome=11N +datum=WGS84")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
TA <- CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
ca <- aggregate(cata)
vca <- intersect(v, ca)
ssplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
ca <- aggregate(cata)
vca <- intersect(v, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
v <- voronoi(dta)
plot(v)
ca <- cata
vca <- intersect(v, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
vca <- intersect(ca, v)
ca <- aggregate(cata)
vca <- intersect(ca, v)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
# optionally report shapefile details
ogrInfo("Input/CookEastArea", "CookEastArea")
# read in shapefiles
CookEastBoundary <- readOGR("Input/Polylines", "CafCookEastBoundary")
# optionally report shapefile details
ogrInfo("Input/CookEastArea", "CafCookEastArea")
# optionally report shapefile details
#ogrInfo("Input/Polylines", "CookEastBoundary")
ogrInfo("Input/CookEastArea", "CafCookEastArea")
# read in shapefiles
#CookEastBoundary <- readOGR("Input/Polylines", "CookEastBoundary")
CookEastBoundary <- readOGR("Input/CookEastArea", "CafCookEastArea")
# note that readOGR will read the .prj file if it exists
print(proj4string(CookEastBoundary))
# generate map
plot(CookEastBoundary, axes=TRUE, border="gray")
dsp <- SpatialPoints(d[,6:5], proj4string=CRS(proj4string(CookEastBoundary)))
dsp <- SpatialPointsDataFrame(dsp, d)
cuts <- c(0,200,400,600,800,100,1200,1400)
blues <- colorRampPalette(c('yellow', 'orange', 'blue', 'dark blue'))
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
TA <- CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
ca <- aggregate(cata)
vca <- intersect(ca, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
ca <- aggregate(cata)
vca <- intersect(ca, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
v <- voronoi(dta)
plot(v)
TA <- CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
# note that readOGR will read the .prj file if it exists
print(proj4string(CookEastBoundary))
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
v <- voronoi(dta)
plot(v)
ca <- aggregate(cata)
vca <- intersect(ca, ca)
ca <- aggregate(cata)
vca <- intersect(v, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
plot(dta)
plot(cata)
# optionally report shapefile details
ogrInfo("Input/Polylines", "CookEastBoundary")
dsp <- SpatialPoints(d[,6:5], proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
dsp <- SpatialPointsDataFrame(dsp, d)
cuts <- c(0,200,400,600,800,100,1200,1400)
blues <- colorRampPalette(c('yellow', 'orange', 'blue', 'dark blue'))
pols <- list("sp.polygons", CookEastBoundary)
spplot(dsp, 'GrainWeightWet', cuts=cuts, col.regions=blues(5), sp.layout=pols, pch=20, cex=2)
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
cata <- spTransform(CookEastBoundary, TA)
plot(cata)
v <- voronoi(dta)
plot(v)
ca <- aggregate(cata)
vca <- intersect(v, ca)
spplot(vca, 'GrainWeightWet', col.regions=rev(get_col_regions()))
r <- raster(CookEastBoundary, res=10000)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=1000)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=100)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=10)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=1)
vr <- rasterize(vca, r, 'GrainWeightWet')
r <- raster(CookEastBoundary, res=5)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=10)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
r <- raster(CookEastBoundary, res=5)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
r <- raster(CookEastBoundary, res=10)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
r <- raster(CookEastBoundary, res=4)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
r <- raster(CookEastBoundary, res=5)
vr <- rasterize(vca, r, 'GrainWeightWet')
plot(vr)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
plot(idwr, residuals=dta,pch=15)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(CookEastBoundary, gs)
gs <- gstat(formula = GrainWeightWet~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
# clean nulls
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
d['tescolumn'] <- d$GrainWeightWet / 1.82
View(d)
d <- read.csv("Input/HY2013GP_GrainWeightOnly_171012.csv")
# clean nulls
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
d['WetYield1.828m2'] <- d$GrainWeightWet / 1.828
d['WetYield2.4384m2'] <- d$GrainWeightWet / 2.4384
library(sp)
library(rgdal)
library(dismo)
library(gstat)
#' Creates a IDW map of yield values from grain weight
#' @param data.path A string of the path to csv file with grain mass data in WGS84 datum and columns: FieldID	Column	Row2	ID2	Latitude	Longitude	Year	SampleID	Crop	GrainWeightWet
#' @param area.harvested A number for the area harvested in m2, grain mass will be divided by this number to get mass/area
#' @param polygon.shpdir A string for the relative folder containing a polygon ESRI shapefile
#' @param polygon.shpname A string for the name, without extension, of the polygon ESRI shapefile
map_yield <- function(data.path, area.harvested, polygon.shpdir, polygon.shpname) {
# Read data and clean nulls
d <- read.csv(data.path)
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
# Append a column with per area yield
d['Yield'] <- d$GrainWeightWet / area.harvested
# Print shapefile info
ogrInfo(polygon.shpdir, polygon.shpname)
# Read boundary shapefile
boundary <- readOGR(polygon.shpdir, polygon.shpname)
# Convert csv gain mass data to spatial points and specify the datum
dsp <- SpatialPoints(d[,6:5], proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
dsp <- SpatialPointsDataFrame(dsp, d)
# Project spatial data to UTM Zone 11N
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
boundaryta <- spTransform(boundary, TA)
# Create proximity polygons, or nearest neighbor interpolation
v <- voronoi(dta)
# Confine to given boundary
ca <- aggregate(boundaryta)
vca <- intersect(v, ca)
# Rasterize it
r <- raster(boundaryta, res=5)
vr <- rasterize(vca, r, 'Yield')
# Inverse distance weighted interpolation
gs <- gstat(formula = Yield~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
}
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 2.4384, "Input/CookEastArea", "CafCookEastArea")
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea")
map_yield <- function(data.path, area.harvested, polygon.shpdir, polygon.shpname, crop.name = "") {
# Read data and clean nulls
d <- read.csv(data.path)
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
if(crop.name != "" && crop.name %in% d$Crop)
{
d <- d[(d$Crop == crop.name), ]
}
# Append a column with per area yield
d['Yield'] <- d$GrainWeightWet / area.harvested
# Print shapefile info
ogrInfo(polygon.shpdir, polygon.shpname)
# Read boundary shapefile
boundary <- readOGR(polygon.shpdir, polygon.shpname)
# Convert csv gain mass data to spatial points and specify the datum
dsp <- SpatialPoints(d[,6:5], proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
dsp <- SpatialPointsDataFrame(dsp, d)
# Project spatial data to UTM Zone 11N
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
boundaryta <- spTransform(boundary, TA)
# Create proximity polygons, or nearest neighbor interpolation
v <- voronoi(dta)
# Confine to given boundary
ca <- aggregate(boundaryta)
vca <- intersect(v, ca)
# Rasterize it
r <- raster(boundaryta, res=5)
vr <- rasterize(vca, r, 'Yield')
# Inverse distance weighted interpolation
gs <- gstat(formula = Yield~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
}
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea")
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "WW")
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea")
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "GB")
plot(dta)
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "GB")
map_yield <- function(data.path, area.harvested, polygon.shpdir, polygon.shpname, crop.name = "") {
# Read data and clean nulls
d <- read.csv(data.path)
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
if(crop.name != "" && crop.name %in% d$Crop)
{
d <- d[(d$Crop == crop.name), ]
}
# Append a column with per area yield
d['Yield'] <- d$GrainWeightWet / area.harvested
# Print shapefile info
ogrInfo(polygon.shpdir, polygon.shpname)
# Read boundary shapefile
boundary <- readOGR(polygon.shpdir, polygon.shpname)
# Convert csv gain mass data to spatial points and specify the datum
dsp <- SpatialPoints(d[,6:5], proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
dsp <- SpatialPointsDataFrame(dsp, d)
# Project spatial data to UTM Zone 11N
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
boundaryta <- spTransform(boundary, TA)
# Create proximity polygons, or nearest neighbor interpolation
v <- voronoi(dta)
# Confine to given boundary
ca <- aggregate(boundaryta)
vca <- intersect(v, ca)
# Rasterize it
r <- raster(boundaryta, res=5)
vr <- rasterize(vca, r, 'Yield')
# Inverse distance weighted interpolation
gs <- gstat(formula = Yield~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
plot(dta)
}
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "GB")
map_yield <- function(data.path, area.harvested, polygon.shpdir, polygon.shpname, crop.name = "") {
# Read data and clean nulls
d <- read.csv(data.path)
d <- d[!(is.na(d$GrainWeightWet) | d$GrainWeightWet==""), ]
if(crop.name != "" && crop.name %in% d$Crop)
{
d <- d[(d$Crop == crop.name), ]
}
# Append a column with per area yield
d['Yield'] <- d$GrainWeightWet / area.harvested
# Print shapefile info
ogrInfo(polygon.shpdir, polygon.shpname)
# Read boundary shapefile
boundary <- readOGR(polygon.shpdir, polygon.shpname)
# Convert csv gain mass data to spatial points and specify the datum
dsp <- SpatialPoints(d[,6:5], proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
dsp <- SpatialPointsDataFrame(dsp, d)
# Project spatial data to UTM Zone 11N
TA <- CRS("+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0")
dta <- spTransform(dsp, TA)
boundaryta <- spTransform(boundary, TA)
# Create proximity polygons, or nearest neighbor interpolation
v <- voronoi(dta)
# Confine to given boundary
ca <- aggregate(boundaryta)
vca <- intersect(v, ca)
# Rasterize it
r <- raster(boundaryta, res=5)
vr <- rasterize(vca, r, 'Yield')
# Inverse distance weighted interpolation
gs <- gstat(formula = Yield~1, locations=dta)
idw <- interpolate(r, gs)
idwr <- mask(idw, vr)
plot(idwr)
lines(dta)
}
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "GB")
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea")
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "WW")
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
map_yield("Input/HY2013GP_GrainWeightOnly_171012.csv", 1.828, "Input/CookEastArea", "CafCookEastArea", "WW")
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
source('C:/OneDrive/OneDrive - Washington State University (email.wsu.edu)/Projects/CookEastPlantHandHarvest/1999-2016/Working/R/exploring2013.R')
